services:
  be-stg:
    build: ../
#    ports:
#      - "3000:3000"
    volumes:
      - app_data:/usr/src/app/be
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      ENV: STAGING
  mysql:
    image: mysql
    container_name: mysql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      retries: 5
      start_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: asdasd
      MYSQL_DATABASE: dbname
      MYSQL_USER: dbuser
      TZ: Asia/Jakarta
    ports:
      - 3306:3306
    volumes:
      - my-db:/var/lib/mysql
      - ../sqlfiles:/docker-entrypoint-initdb.d

  adminer:
    image: adminer
    ports:
      - 3307:8080

  redis:
    image: "redis:alpine"
    ports:
      - 6379:6379

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 9091:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

  proxy:
    image: nginx
    volumes:
      - type: bind
        source: ./proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 30:30
    depends_on:
      - be-stg

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/home/ngrok/.ngrok2/ngrok.yml"
    volumes:
      - ./ngrok:/home/ngrok/.ngrok2
    ports:
      - 4040:4040
    depends_on:
      - proxy

volumes:
  my-db:
  prom_data:
  app_data: